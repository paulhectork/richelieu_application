@charset "UTF-8";
@import "./fonts/galliard/stylesheet.css";
@import "animate.css";


/**************************************************************************
 * ABOUT THE CSS                                                          *
 *                                                                        *
 * responsive design rules: there are TWO VIEWPORT SIZES,                 *
 * with occasional variants.                                              *
 * (1) default is mobile/portrait:                                        *
 *     `@media ( orientation:portrait )`                                  *
 *     (this one is always targeted implicitly)                           *
 * (2) computer screen/tablet/landscape :                                 *
 *     `@media ( orientation: landscape )`                                *
 *                                                                        *
 **************************************************************************/


/***********************************************
 *              basic definitions              *
 ***********************************************/
@font-face {
  font-family: "urlaub-grotesk";
  src: url("./fonts/Urlaub-Grotesk-Regular.otf") format("opentype");
  font-weight: normal;
  font-style: normal;
}
@font-face {
  font-family: "mels";
  src: url("./fonts/mels/Mels-Regular.otf") format("opentype");
  font-weight: normal;
  font-style: normal;
}
@font-face {
  font-family: "mels";
  src: url("./fonts/mels/Mels-Italic.otf") format("opentype");
  font-weight: normal;
  font-style: italic;
}

:root {
  /**
   * FONT DEFINITIONS
   */
  --cs-font-serif: "ITC Galliard Std";
  --cs-font-sans-serif: "urlaub-grotesk", "mels", "Helvetica Neue", "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";

  /**
   * COLOR DEFINITIONS
   */
  --cs-white: #ffffff;
  --cs-black: #000000;
  --cs-plum: #710551;
  --cs-duck: #00553e;
  --cs-seagreen: #8fc7b1;
  --cs-darkgrey: #212529;
  --cs-lightgrey: #adb5bd;
  --cs-darkplum: #680059;

  /* nice colors that aren't used
  --cs-pink: #ffb0ff;
  --cs-gold: #da9902;
  --cs-blue: #001bde; */

  /*--cs-lightplum: #a2004e;*/

  /**
   * OUR COLOR THEME
   *
   * we define 2 modes, each which 3 states. all have foreground/background combos.
   *
   * >>>> `main`        : the base state: common text and elements.
   * ---> `main-default`: the base state
   * ---> `main-second` : either for text that we want to shine a light
   *                      on, or for buttons and interactive stuff that
   *                      is being hovered
   * ---> `main-active` : when an action is triggered on an interactive
   *                      element. this insists on a change of state, or
   *                      on an action from the user.
   **********************
   * >>>> `contrast`        : for contrasting elements. this is thought for
   *                          big blocks that have a special meaning in
   *                          term of UI/UX and not just for basic buttons.
   * ---> `contrast-default`: the base state
   * ---> `contrast-second` : when we want to shine a light on an element, or
   *                          for hovering
   * ---> `contrast-active` : when an action is triggered.
   **********************
   * >>>> `link` : is a special, micro state for normal links (in text)
   *
   * of course, there may be special cases where we'll use a color
   * theme different from the 3 states defined above, but keep it
   * to a minimum.
   */

  /**********************/
  --cs-main-default: var(--cs-black);           /* font color */
  --cs-main-default-bg: var(--cs-white);                /* background color */

  --cs-main-second: var(--cs-white);
  --cs-main-second-bg: var(--cs-lightgrey);

  --cs-main-active-bg: var(--cs-white);
  --cs-main-active: var(--cs-seagreen);

  /**********************/
  --cs-contrast-main: var(--cs-lightgrey);
  --cs-contrast-main-bg: var(--cs-darkgrey);

  --cs-contrast-second: var(--cs-white);
  --cs-contrast-second-bg: var(--cs-lightgrey);

  --cs-contrast-active: var(--cs-white);
  --cs-contrast-active-bg: var(--cs-seagreen);

  /**********************/
  --cs-link-default: var(--cs-plum);
  --cs-link-default-bg: var(--cs-main-default-bg);
  --cs-link-visited: var(--cs-darkplum);
  --cs-link-visited-bg: var(--cs-main-default-bg);

  /**
   * OTHER CUSTOM DEFINITIONS
   */
  --cs-border: 1px solid black;

  --cs-navbar-height-mobile: 7vh;
  --cs-navbar-height-desktop: 9vh;
  --cs-sidebar-width-desktop: 25vw;
  --cs-sidebar-width-mobile: 60vw;

  --cs-fontsize-title: max(14px, 2.5vh);
  --cs-fontsize-main-mobile: 10pt/*max(15px, 1.5vh)*/;
  --cs-fontsize-main-desktop: 10pt /*max(17px, 1.75vh)*/;
  --cs-fontsize-menu-mobile: /*var(--cs-fontsize-main-mobile)*/;
  --cs-fontsize-menu-desktop: 115% /*var(--cs-fontsize-main-desktop)*/;
  --cs-fontsize-legend: 125%;

  /**
   *  ANIMATE.CSS GLOBALS
   */
   --animate-duration: 1s;

}

/***********************************************
 *                global styles                *
 ***********************************************/
*
, *::before
, *::after {
  box-sizing: border-box;
}

body {
  margin: 0;
  padding: 0;
  height: 100%;
  width: 100%;

  font-weight: 500;
  font-family: var(--cs-font-serif);
  font-size: var(--cs-fontsize-main-desktop);
}

a {
  color: var(--cs-link-default);
  background-color: var(--cs-link-default-bg);
}
a:visited {
  color: var(--cs-link-visited);
  background-color: var(--cs-link-visited-bg);
}

.main-default {
  color: var(--cs-main-default);
  background-color: var(--cs-main-default-bg);
}
.main-second {
  color: var(--cs-main-second);
  background-color: var(--cs-main-second-bg);
}
.main-active {
  color: var(--cs-main-active);
  background-color: var(--cs-main-active-bg);
}

.contrast-default {
  color: var(--cs-contrast-default-bg);
  background-color: var(--cs-contrast-default);
}
.contrast-second {
  background-color: var(--cs-contrast-second-bg);
  color: var(--cs-contrast-second);
}
.contrast-active {
  color: var(--cs-contrast-active);
  background-color: var(--cs-contrast-active-bg);
}

.border-bottom {
  border-bottom: var(--cs-border);
}

.fill-parent {
  width: 100%;
  height: 100%;
}

.sticky-top {
  top: 0;
  position: sticky;
}

/* generic button styling */
button {
  margin: 2px;
  font-family: "mels";
  padding: 3px 5px 1px 5px;
  background-color: var(--cs-main-default-bg);

  color: var(--cs-main-default);
  border: double 1px;
  cursor: grab;
  width: auto;

  transition: color 0.2s;
  transition: background-color 0.2s;
}
button:hover {
  background-color: var(--cs-main-second-bg);
  color: var(--cs-main-second);
  border: var(--cs-border);
}
button:active {
  background-color: var(--cs-seagreen);
  color: var(--cs-main-default);
  width: fit-content;
}

/* svg */
button > svg > path {
  stroke: var(--cs-main-default);
  transition: stroke 0.2s;
}
button:hover > svg > path {
  stroke: var(--cs-main-second);
  background-color: var(--cs-main-second-bg);
}
button:active > svg > path {
  stroke: var(--cs-main-active);
  stroke: var(--cs-main-active-bg);

}

/* vue transitions
 * see: https://vuejs.org/guide/built-ins/transition.html
 */
.v-enter-active
, .v-leave-active {
  transition: opacity 0.25s ease;
}
.v-enter-from
, .v-leave-to {
  opacity: 0;
}
